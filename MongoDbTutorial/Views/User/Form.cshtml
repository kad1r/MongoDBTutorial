@model UserVM

@using MongoDbTutorial.Models;

@{
    ViewBag.Title = "User Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input type="hidden" id="deleteRecord" value="@(Model.User != null ? Model.User.Id : "0")"/>
<div class="col-xs-12">
    @using (Html.BeginForm("Form", "User", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(x => x.User.Id)

        <div class="form-group">
            @Html.LabelFor(x => x.User.FullName, new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(x => x.User.FullName, new { @class = "form-control", placeholder = "" })
                @Html.ValidationMessageFor(x => x.User.FullName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.User.UserName, new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(x => x.User.UserName, new { @class = "form-control", placeholder = "" })
                @Html.ValidationMessageFor(x => x.User.UserName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.User.Email, new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(x => x.User.Email, new { @class = "form-control", type = "email", placeholder = "" })
                @Html.ValidationMessageFor(x => x.User.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.User.Password, new { @class = "control-label" })
            <div>
                @Html.TextBoxFor(x => x.User.Password, new { @class = "form-control", type = "password", placeholder = "" })
                @Html.ValidationMessageFor(x => x.User.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.User.IsAdmin, new { @class = "control-label" })
            <div class="checkbox">
                @Html.CheckBoxFor(x => x.User.IsAdmin)
                @*You can create another view model for this or you can create a meta class that contains IsActive and IsDeleted as a nullable boolean*@
                @Html.CheckBoxFor(x => x.User.IsActive, new { @class = "hidden" })
                @Html.CheckBoxFor(x => x.User.IsDeleted, new { @class = "hidden" })
            </div>
        </div>

        <div class="clearfix"></div>
        <button type="submit" class="btn btn-outline-primary">Submit</button>
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Back to list</a>
    }
</div>
