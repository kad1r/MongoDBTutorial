@model CategoryVM

@using MongoDbTutorial.Models;

@{
    ViewBag.Title = "Category Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input type="hidden" id="deleteRecord" value="@(Model.Category != null ? Model.Category.Id : new MongoDB.Bson.ObjectId())"/>
<div class="col-xs-12">
	@using (Html.BeginForm("Form", "Category", FormMethod.Post, new { @class = "form-horizontal" }))
	{
		@Html.AntiForgeryToken()
		@Html.ValidationSummary(true)

		<div class="form-group">
			@Html.LabelFor(x => x.Category.Heading, new { @class = "control-label" })
			<div>
				@Html.TextBoxFor(x => x.Category.Heading, new { @class = "form-control", placeholder = "" })
				@Html.ValidationMessageFor(x => x.Category.Heading)
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(x => x.Category.Summary, new { @class = "control-label" })
			<div>
				@Html.TextBoxFor(x => x.Category.Summary, new { @class = "form-control", placeholder = "" })
				@Html.ValidationMessageFor(x => x.Category.Summary)
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(x => x.Category.Description, new { @class = "control-label" })
			<div>
				@Html.TextAreaFor(x => x.Category.Description, new { @class = "form-control", rows = "5", placeholder = "" })
				@Html.ValidationMessageFor(x => x.Category.Description)
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(x => x.Category.Sequence, new { @class = "control-label" })
			<div>
				@Html.TextBoxFor(x => x.Category.Sequence, new { @class = "form-control", type = "number", min = "1" })
				@Html.ValidationMessageFor(x => x.Category.Sequence)
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(x => x.Category.IsActive, new { @class = "control-label" })
			<div class="checkbox">
				@Html.CheckBoxFor(x => x.Category.IsActive)
				@*You can create another view model for this or you can create a meta class that contains IsActive and IsDeleted as a nullable boolean*@
				@Html.CheckBoxFor(x => x.Category.IsDeleted, new { @class = "hidden" })
			</div>
		</div>

		<div class="clearfix"></div>
		<button type="submit" class="btn btn-outline-primary">Submit</button>
		<a href="@Url.Action("Index")" class="btn btn-outline-secondary">Back to list</a>
	}
</div>
